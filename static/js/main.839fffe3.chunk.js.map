{"version":3,"sources":["Components/Navbar.js","Components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","DarkModeStatus","href","brandName","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","role","placeholder","aria-checked","onClick","event","EnableDarkMode","htmlFor","Home","_useState","useState","_useState2","_slicedToArray","text","setText","value","onChange","console","log","target","rows","beautyText","toUpperCase","SplitWords","split","undoWords","slice","length","join","defaultProps","App","setDarkStatusMode","Fragment","checked","document","body","style","backgroundColor","title","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.839fffe3.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n// import { Link } from 'react-router-dom'\n// let brandName = 'RAHUL'// my variables as javascript\n\nexport default function Navbar(props) {\n    const MultipleFunctionCaller = (event) => {\n        props.EnableDarkMode(event)\n    }\n\n    return (\n        <nav className={`navbar navbar-expand-lg  navbar-${props.DarkModeStatus} bg-${props.DarkModeStatus} `}>\n            <div className=\"container-fluid\">\n                {/* <Link className=\"navbar-brand\" to=\"/\">{props.brandName}</Link> */}\n                <a className=\"navbar-brand\" href=\"/\">{props.brandName}</a>\n\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarTogglerDemo02\" aria-controls=\"navbarTogglerDemo02\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                        <li className=\"nav-item\">\n                            {/* <Link className=\"nav-link active\" to=\"/\">Home</Link> */}\n                            <a className=\"nav-link active\" href=\"/\">Home</a>\n\n                        </li>\n                        <li className=\"nav-item\">\n                            {/* <Link className=\"nav-link\" to=\"/about\">About</Link> */}\n                            <a className=\"nav-link\" href=\"/about\">About</a>\n\n                        </li>\n                        <li className=\"nav-item\">\n                            {/* <Link className=\"nav-link\" to=\"/service\">Services</Link> */}\n                            <a className=\"nav-link\" href=\"/service\">Services</a>\n\n                        </li>\n                    </ul>\n                    <form className=\"d-flex\" role=\"search\">\n                        <input className=\"form-control me-2 rounded-5\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n                        <button className=\"btn btn-outline-success rounded-5\" type=\"submit\">Search</button>\n                    </form>\n                    <div className=\"form-check form-switch mx-4\">\n                        <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" aria-checked='false' onClick={MultipleFunctionCaller} />\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\"></label>\n                    </div>\n                </div>\n            </div>\n        </nav>\n    )\n}\n// this is schema for props \nNavbar.propTypes = {\n    brandName: PropTypes.string.isRequired\n}\n// this is deafult props like deafult in schema\nNavbar.defaultProps = {\n    brandName: 'name here...'\n}","\nimport React, { useState } from 'react'\n\nexport default function Home(props) {\n    const [text, setText] = useState('your text here')\n    //text ='some value to change instead of your change value'- wrong way to chnage value of var text\n    //setText(`the value of 'text' var is changed`) //this is why we decleared function name setText to update var\n    const OnSubmitBtnClick = () => {\n        // setText('state cange beacuse you click submit')\n        let beautyText = text.toUpperCase()\n        setText(beautyText)\n\n    }\n    const onChangeHandler = (event) => {\n        console.log('this is onchange')\n        setText(event.target.value)\n    }\n    const OnClearHandlerClick = () => {\n        setText('')\n    }\n\n    const onUndoClicked = () => {\n        let SplitWords = text.split('')\n        let undoWords = SplitWords.slice(0, SplitWords.length - 1).join('')\n        console.log(undoWords)\n        setText(undoWords)\n\n    }\n\n    return (\n        <div className=\"container\">\n            <div className={`mb-3 mt-5 text-${props.DarkModeStatus === 'dark' ? 'light' : 'dark'}`}>\n                <label htmlFor=\"exampleFormControlInput1\" className=\"form-label\">Username </label>\n                <input type=\"email\" className=\"form-control\" id=\"exampleFormControlInput 1\" placeholder=\"username\" />\n            </div>\n            < div className={`mb-3 text-${props.DarkModeStatus === 'dark' ? 'light' : 'dark'}`}  >\n                <label htmlFor=\"exampleFormControlTextarea1\" className=\"form-label\">Message here.</label>\n                <textarea className=\"form-control\" value={text} onChange={onChangeHandler} id=\"exampleFormControlTextarea1\" rows=\"3\"  ></textarea>\n            </div>\n            <button className='btn btn-primary mx-2' onClick={OnSubmitBtnClick}>Submit</button>\n            <button className='btn btn-danger mx-2' onClick={OnClearHandlerClick}>Clear</button>\n            <button className='btn btn-success mx-2' onClick={onUndoClicked}>Undo</button>\n\n\n\n            <div className={`container my-5 text-${props.DarkModeStatus === 'dark' ? 'light' : 'dark'}`}>\n                <h1>Text Summery...</h1>\n                <p>You wrote {text.split(' ').length - 1} character and {text.length} words</p>\n\n            </div>\n        </div>\n    )\n}\n","// import logo from './logo.svg';\nimport './App.css';\nimport React, { useState } from 'react'\nimport Navbar from './Components/Navbar';\nimport Home from './Components/Home'\n// import About from './Components/AboutUs';\n// import NotFound from './Components/NotFound';\n\n// import {\n//   BrowserRouter as Router,\n//   Route,\n//   Routes\n// } from 'react-router-dom';\n\n// import ImageSlider from './Components/ImageSlider';\n\nfunction App() {\n  const [DarkModeStatus, setDarkStatusMode] = useState('light')\n  const EnableDarkMode = (event) => {\n    if (event.target.checked === true) {\n      setDarkStatusMode('dark')\n      document.body.style.backgroundColor = '#040D12'\n      document.title = 'dark mode on'\n\n    } else {\n      setDarkStatusMode('light')\n      document.body.style.backgroundColor = '#F0F0F0'\n      document.title = 'dark mode off'\n    }\n  }\n  return (\n    <>\n\n      {/* <Router> */}\n\n      <Navbar brandName='Rahul Website' EnableDarkMode={EnableDarkMode} DarkModeStatus={DarkModeStatus} />\n      {/* <div className=\"container\"> */}\n      {/* <Routes>\n            <Route exact path=\"/\" element={<Home DarkModeStatus={DarkModeStatus} />} />\n            <Route exact path=\"/about\" element={<About DarkModeStatus={DarkModeStatus} />} />\n            <Route exact path=\"*\" element={<NotFound />} />\n          </Routes> */}\n\n      {/* </div> */}\n      {/* </Router> */}\n      <Home DarkModeStatus={DarkModeStatus} />\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}